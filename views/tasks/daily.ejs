<%- include('../partials/header', { title: 'Daily Tasks' }) %>

<div class="min-h-screen bg-gradient-to-br from-[#00CED1]/5 via-white to-[#20B2AA]/10">
  <div class="container mx-auto px-4 py-8">
    <!-- Header Section -->
    <div class="mb-8">
      <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between">
        <div class="mb-6 lg:mb-0">
          <div class="flex items-center space-x-3">
            <div class="w-12 h-12 bg-gradient-to-r from-[#00CED1] to-[#20B2AA] rounded-xl flex items-center justify-center shadow-lg">
              <i class="fas fa-calendar-day text-white text-xl"></i>
            </div>
            <div>
              <h1 class="text-3xl font-bold text-gray-900">Daily Tasks</h1>
              <p class="text-gray-600 mt-1">Organize and track your daily productivity</p>
            </div>
          </div>
        </div>

        <!-- Date Picker and Actions -->
        <div class="flex flex-col sm:flex-row items-start sm:items-center space-y-3 sm:space-y-0 sm:space-x-4">
          <!-- Date Selector -->
          <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-3">
            <form method="GET" class="flex items-center space-x-3">
              <div class="relative">
                <i class="fas fa-calendar text-[#00CED1] absolute left-3 top-1/2 transform -translate-y-1/2"></i>
                <input type="date" name="date" value="<%= selectedDate %>"
                       class="pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#00CED1] focus:border-[#00CED1] transition-all duration-200"
                       onchange="this.form.submit()">
              </div>
              <button type="submit" class="bg-gradient-to-r from-[#00CED1] to-[#20B2AA] text-white px-4 py-2 rounded-lg hover:from-[#00B8BA] hover:to-[#1CA0A0] transition-all duration-200 shadow-md hover:shadow-lg">
                <i class="fas fa-search mr-2"></i>Go
              </button>
            </form>
          </div>

          <!-- Quick Actions -->
          <div class="flex items-center space-x-2">
            <button type="button" onclick="showQuickAddModal()" class="bg-[#00CED1] text-white px-4 py-2 rounded-lg hover:bg-[#00B8BA] transition-all duration-200 shadow-md hover:shadow-lg">
              <i class="fas fa-plus mr-2"></i>Quick Add
            </button>
            <a href="/tasks/deleted" class="bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-all duration-200 shadow-md hover:shadow-lg">
              <i class="fas fa-trash-restore mr-2"></i>Deleted Tasks
            </a>
          </div>
        </div>
      </div>
    </div>

    <!-- Statistics Cards -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6 mb-8">
      <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition-all duration-200">
        <div class="flex items-center">
          <div class="w-12 h-12 bg-gradient-to-r from-[#00CED1] to-[#20B2AA] rounded-xl flex items-center justify-center">
            <i class="fas fa-tasks text-white text-lg"></i>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-gray-600">Total Tasks</p>
            <p class="text-2xl font-bold text-gray-900"><%= stats.total %></p>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition-all duration-200">
        <div class="flex items-center">
          <div class="w-12 h-12 bg-gradient-to-r from-[#00CED1] to-[#20B2AA] rounded-xl flex items-center justify-center">
            <i class="fas fa-check-circle text-white text-lg"></i>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-gray-600">Completed</p>
            <p class="text-2xl font-bold text-gray-900"><%= stats.completed %></p>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition-all duration-200">
        <div class="flex items-center">
          <div class="w-12 h-12 bg-gradient-to-r from-[#00CED1] to-[#20B2AA] rounded-xl flex items-center justify-center">
            <i class="fas fa-clock text-white text-lg"></i>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-gray-600">Pending</p>
            <p class="text-2xl font-bold text-gray-900"><%= stats.pending %></p>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition-all duration-200">
        <div class="flex items-center">
          <div class="w-12 h-12 bg-gradient-to-r from-[#00CED1] to-[#20B2AA] rounded-xl flex items-center justify-center">
            <i class="fas fa-exclamation-triangle text-white text-lg"></i>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-gray-600">Overdue</p>
            <p class="text-2xl font-bold text-gray-900"><%= stats.overdue %></p>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition-all duration-200">
        <div class="flex items-center">
          <div class="w-12 h-12 bg-gradient-to-r from-[#00CED1] to-[#20B2AA] rounded-xl flex items-center justify-center">
            <i class="fas fa-percentage text-white text-lg"></i>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-gray-600">Progress</p>
            <p class="text-2xl font-bold text-gray-900">
              <%= stats.total > 0 ? Math.round((stats.completed / stats.total) * 100) : 0 %>&#37;
            </p>
          </div>
        </div>
      </div>
    </div>

    <!-- Help Section -->
    <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
      <div class="flex items-start space-x-3">
        <div class="flex-shrink-0">
          <i class="fas fa-info-circle text-blue-500 text-lg"></i>
        </div>
        <div>
          <h4 class="text-sm font-medium text-blue-900 mb-1">Quick Actions</h4>
          <p class="text-sm text-blue-700">
            <strong>Delete Tasks:</strong> Look for the red "Delete" button on the right side of each task card.
            <strong>Edit Tasks:</strong> Click the edit icon next to the delete button.
            <strong>Complete Tasks:</strong> Click the checkbox on the left side of each task.
          </p>
        </div>
      </div>
    </div>

    <!-- Main Content with Tabs -->
    <div class="bg-white rounded-2xl shadow-lg border border-gray-200 overflow-hidden">
      <!-- Tab Navigation -->
      <div class="border-b border-gray-200">
        <nav class="flex space-x-8 px-6" aria-label="Tabs">
          <button type="button" onclick="testTabClick('all')" id="tab-all" class="tab-button active py-4 px-1 border-b-2 border-[#00CED1] text-sm font-medium text-[#00CED1]">
            <i class="fas fa-list mr-2"></i>All Tasks (<%= tasks.length %>)
          </button>
          <button type="button" onclick="testTabClick('pending')" id="tab-pending" class="tab-button py-4 px-1 border-b-2 border-transparent text-sm font-medium text-gray-500 hover:text-gray-700">
            <i class="fas fa-clock mr-2"></i>Pending (<%= tasks.filter(t => t.status === 'pending').length %>)
          </button>
          <button type="button" onclick="testTabClick('completed')" id="tab-completed" class="tab-button py-4 px-1 border-b-2 border-transparent text-sm font-medium text-gray-500 hover:text-gray-700">
            <i class="fas fa-check-circle mr-2"></i>Completed (<%= tasks.filter(t => t.status === 'completed').length %>)
          </button>
          <button type="button" onclick="testTabClick('overdue')" id="tab-overdue" class="tab-button py-4 px-1 border-b-2 border-transparent text-sm font-medium text-gray-500 hover:text-gray-700">
            <i class="fas fa-exclamation-triangle mr-2"></i>Overdue (<%= tasks.filter(t => t.isOverdue).length %>)
          </button>
        </nav>
      </div>

      <!-- Tab Content -->
      <div class="p-6">
        <!-- All Tasks Tab -->
        <div id="tab-content-all" class="tab-content active">
          <div class="mb-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-2">
                <!-- prettier-ignore -->
              All Tasks for <%= new Date(selectedDate).toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) %>
            </h3>
            <p class="text-gray-600">Manage all your tasks for today</p>
          </div>
          <div class="task-list" id="task-list-all">
            <% if (tasks.length === 0) { %>
              <div class="text-center py-12">
                <div class="w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
                  <i class="fas fa-tasks text-gray-400 text-3xl"></i>
                </div>
                <h3 class="text-lg font-medium text-gray-900 mb-2">No tasks yet</h3>
                <p class="text-gray-600 mb-6">Get started by creating your first task for today</p>
                <button type="button" onclick="showQuickAddModal()" class="bg-gradient-to-r from-[#00CED1] to-[#20B2AA] text-white px-6 py-3 rounded-lg hover:from-[#00B8BA] hover:to-[#1CA0A0] transition-all duration-200 shadow-md hover:shadow-lg">
                  <i class="fas fa-plus mr-2"></i>Add Your First Task
                </button>
              </div>
            <% } else { %>
              <div class="space-y-4">
                <% tasks.forEach(function(task) { %>
                  <div class="task-card <%= task.status === 'completed' ? 'completed' : '' %> <%= task.isOverdue ? 'overdue' : '' %>"
                       data-task-id="<%= task._id %>" data-status="<%= task.status %>" data-overdue="<%= task.isOverdue %>">
                    <div class="bg-white border border-gray-200 rounded-xl p-6 hover:shadow-md transition-all duration-200">
                      <div class="flex items-start justify-between">
                        <div class="flex items-start space-x-4 flex-1">
                          <!-- Status Checkbox -->
                          <div class="flex-shrink-0">
                            <% if (task.status === 'completed') { %>
                              <form action="/tasks/<%= task._id %>/reset" method="POST" class="inline">
                                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                                <button type="submit" class="w-6 h-6 bg-[#00CED1] rounded-full flex items-center justify-center hover:bg-[#00B8BA] transition-colors duration-200">
                                  <i class="fas fa-check text-white text-sm"></i>
                                </button>
                              </form>
                            <% } else { %>
                              <form action="/tasks/<%= task._id %>/complete" method="POST" class="inline">
                                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                                <button type="submit" class="w-6 h-6 border-2 border-gray-300 rounded-full hover:border-[#00CED1] hover:bg-[#00CED1]/10 transition-all duration-200"></button>
                              </form>
                            <% } %>
                          </div>

                          <!-- Task Content -->
                          <div class="flex-1 min-w-0">
                            <div class="flex items-start justify-between mb-2">
                              <h4 class="text-lg font-semibold text-gray-900 <%= task.status === 'completed' ? 'line-through text-gray-500' : '' %>">
                                <%= task.title %>
                              </h4>
                              <div class="flex items-center space-x-2">
                                <!-- Priority Badge -->
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium <%= task.priority === 'high' ? 'bg-red-100 text-red-800' : task.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800' %>">
                                  <i class="fas <%= task.priority === 'high' ? 'fa-fire' : task.priority === 'medium' ? 'fa-clock' : 'fa-leaf' %> mr-1"></i>
                                  <%= task.priority.charAt(0).toUpperCase() + task.priority.slice(1) %>
                                </span>

                                <!-- Category Badge -->
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-[#00CED1]/10 text-[#00CED1] border border-[#00CED1]/20">
                                  <i class="fas fa-tag mr-1"></i>
                                  <%= task.category.charAt(0).toUpperCase() + task.category.slice(1) %>
                                </span>

                                <!-- Overdue Badge -->
                                <% if (task.isOverdue) { %>
                                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                                    <i class="fas fa-exclamation-triangle mr-1"></i>Overdue
                                  </span>
                                <% } %>
                              </div>
                            </div>

                            <% if (task.description) { %>
                              <p class="text-gray-600 mb-3 <%= task.status === 'completed' ? 'line-through text-gray-400' : '' %>">
                                <%= task.description %>
                              </p>
                            <% } %>

                            <!-- Task Meta -->
                            <div class="flex items-center space-x-6 text-sm text-gray-500">
                              <% if (task.dueTime) { %>
                                <span class="flex items-center">
                                  <i class="fas fa-clock mr-2 text-[#00CED1]"></i>
                                  <%= task.dueTime %>
                                </span>
                              <% } %>

                              <% if (task.estimatedMinutes) { %>
                                <span class="flex items-center">
                                  <i class="fas fa-hourglass-half mr-2 text-purple-500"></i>
                                  <%= Math.floor(task.estimatedMinutes / 60) %>h <%= task.estimatedMinutes % 60 %>m
                                </span>
                              <% } %>

                              <% if (task.tags && task.tags.length > 0) { %>
                                <div class="flex items-center space-x-1">
                                  <i class="fas fa-tags mr-2 text-green-500"></i>
                                  <% task.tags.forEach(function(tag) { %>
                                    <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-md text-xs"><%= tag %></span>
                                  <% }); %>
                                </div>
                              <% } %>
                            </div>
                          </div>
                        </div>

                        <!-- Actions -->
                        <div class="flex items-center space-x-2 ml-4 actions">
                          <a href="/tasks/<%= task._id %>/edit" class="text-gray-400 hover:text-[#00CED1] p-2 rounded-lg hover:bg-[#00CED1]/10 transition-all duration-200" title="Edit Task">
                            <i class="fas fa-edit"></i>
                          </a>

                          <form action="/tasks/<%= task._id %>" method="POST" class="inline" onsubmit="return confirmDelete(event)">
                            <input type="hidden" name="_method" value="DELETE">
                            <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                            <button type="submit" class="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded-lg transition-all duration-200 text-sm font-medium flex items-center space-x-1 relative" title="Delete Task">
                              <i class="fas fa-trash text-xs"></i>
                              <span>Delete</span>
                            </button>
                          </form>
                        </div>
                      </div>
                    </div>
                  </div>
                <% }); %>
              </div>
            <% } %>
          </div>
        </div>

        <!-- Pending Tasks Tab -->
        <div id="tab-content-pending" class="tab-content hidden">
          <div class="mb-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-2">Pending Tasks</h3>
            <p class="text-gray-600">Tasks that need your attention</p>
          </div>
          <div class="task-list" id="task-list-pending">
            <% const pendingTasks = tasks.filter(t => t.status === 'pending'); %>
            <% if (pendingTasks.length === 0) { %>
              <div class="text-center py-12">
                <div class="w-24 h-24 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-4">
                  <i class="fas fa-clock text-yellow-400 text-3xl"></i>
                </div>
                <h3 class="text-lg font-medium text-gray-900 mb-2">No pending tasks</h3>
                <p class="text-gray-600">Great job! All tasks are completed</p>
              </div>
            <% } else { %>
              <div class="space-y-4">
                <% pendingTasks.forEach(function(task) { %>
                  <div class="task-card <%= task.status === 'completed' ? 'completed' : '' %> <%= task.isOverdue ? 'overdue' : '' %>"
                       data-task-id="<%= task._id %>" data-status="<%= task.status %>" data-overdue="<%= task.isOverdue %>">
                    <div class="bg-white border border-gray-200 rounded-xl p-6 hover:shadow-md transition-all duration-200">
                      <div class="flex items-start justify-between">
                        <div class="flex items-start space-x-4 flex-1">
                          <!-- Status Checkbox -->
                          <div class="flex-shrink-0">
                            <% if (task.status === 'completed') { %>
                              <form action="/tasks/<%= task._id %>/reset" method="POST" class="inline">
                                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                                <button type="submit" class="w-6 h-6 bg-[#00CED1] rounded-full flex items-center justify-center hover:bg-[#00B8BA] transition-colors duration-200">
                                  <i class="fas fa-check text-white text-sm"></i>
                                </button>
                              </form>
                            <% } else { %>
                              <form action="/tasks/<%= task._id %>/complete" method="POST" class="inline">
                                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                                <button type="submit" class="w-6 h-6 border-2 border-gray-300 rounded-full hover:border-[#00CED1] hover:bg-[#00CED1]/10 transition-all duration-200"></button>
                              </form>
                            <% } %>
                          </div>

                          <!-- Task Content -->
                          <div class="flex-1 min-w-0">
                            <div class="flex items-start justify-between mb-2">
                              <h4 class="text-lg font-semibold text-gray-900 <%= task.status === 'completed' ? 'line-through text-gray-500' : '' %>">
                                <%= task.title %>
                              </h4>
                              <div class="flex items-center space-x-2">
                                <!-- Priority Badge -->
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium <%= task.priority === 'high' ? 'bg-red-100 text-red-800' : task.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800' %>">
                                  <i class="fas <%= task.priority === 'high' ? 'fa-fire' : task.priority === 'medium' ? 'fa-clock' : 'fa-leaf' %> mr-1"></i>
                                  <%= task.priority.charAt(0).toUpperCase() + task.priority.slice(1) %>
                                </span>

                                <!-- Category Badge -->
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-[#00CED1]/10 text-[#00CED1] border border-[#00CED1]/20">
                                  <i class="fas fa-tag mr-1"></i>
                                  <%= task.category.charAt(0).toUpperCase() + task.category.slice(1) %>
                                </span>

                                <!-- Overdue Badge -->
                                <% if (task.isOverdue) { %>
                                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                                    <i class="fas fa-exclamation-triangle mr-1"></i>Overdue
                                  </span>
                                <% } %>
                              </div>
                            </div>

                            <% if (task.description) { %>
                              <p class="text-gray-600 mb-3 <%= task.status === 'completed' ? 'line-through text-gray-400' : '' %>">
                                <%= task.description %>
                              </p>
                            <% } %>

                            <!-- Task Meta -->
                            <div class="flex items-center space-x-6 text-sm text-gray-500">
                              <% if (task.dueTime) { %>
                                <span class="flex items-center">
                                  <i class="fas fa-clock mr-2 text-[#00CED1]"></i>
                                  <%= task.dueTime %>
                                </span>
                              <% } %>

                              <% if (task.estimatedMinutes) { %>
                                <span class="flex items-center">
                                  <i class="fas fa-hourglass-half mr-2 text-purple-500"></i>
                                  <%= Math.floor(task.estimatedMinutes / 60) %>h <%= task.estimatedMinutes % 60 %>m
                                </span>
                              <% } %>

                              <% if (task.tags && task.tags.length > 0) { %>
                                <div class="flex items-center space-x-1">
                                  <i class="fas fa-tags mr-2 text-green-500"></i>
                                  <% task.tags.forEach(function(tag) { %>
                                    <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-md text-xs"><%= tag %></span>
                                  <% }); %>
                                </div>
                              <% } %>
                            </div>
                          </div>
                        </div>

                        <!-- Actions -->
                        <div class="flex items-center space-x-2 ml-4">
                          <a href="/tasks/<%= task._id %>/edit" class="text-gray-400 hover:text-[#00CED1] p-2 rounded-lg hover:bg-[#00CED1]/10 transition-all duration-200" title="Edit Task">
                            <i class="fas fa-edit"></i>
                          </a>

                          <form action="/tasks/<%= task._id %>" method="POST" class="inline" onsubmit="return confirmDelete(event)">
                            <input type="hidden" name="_method" value="DELETE">
                            <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                            <button type="submit" class="text-gray-400 hover:text-red-600 p-2 rounded-lg hover:bg-red-50 transition-all duration-200" title="Delete Task">
                              <i class="fas fa-trash"></i>
                            </button>
                          </form>
                        </div>
                      </div>
                    </div>
                  </div>
                <% }); %>
              </div>
            <% } %>
          </div>
        </div>

        <!-- Completed Tasks Tab -->
        <div id="tab-content-completed" class="tab-content hidden">
          <div class="mb-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-2">Completed Tasks</h3>
            <p class="text-gray-600">Tasks you've successfully finished</p>
          </div>
          <div class="task-list" id="task-list-completed">
            <% const completedTasks = tasks.filter(t => t.status === 'completed'); %>
            <% if (completedTasks.length === 0) { %>
              <div class="text-center py-12">
                <div class="w-24 h-24 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
                  <i class="fas fa-check-circle text-green-400 text-3xl"></i>
                </div>
                <h3 class="text-lg font-medium text-gray-900 mb-2">No completed tasks</h3>
                <p class="text-gray-600">Start completing your tasks to see them here</p>
              </div>
            <% } else { %>
              <div class="space-y-4">
                <% completedTasks.forEach(function(task) { %>
                  <div class="task-card <%= task.status === 'completed' ? 'completed' : '' %> <%= task.isOverdue ? 'overdue' : '' %>"
                       data-task-id="<%= task._id %>" data-status="<%= task.status %>" data-overdue="<%= task.isOverdue %>">
                    <div class="bg-white border border-gray-200 rounded-xl p-6 hover:shadow-md transition-all duration-200">
                      <div class="flex items-start justify-between">
                        <div class="flex items-start space-x-4 flex-1">
                          <!-- Status Checkbox -->
                          <div class="flex-shrink-0">
                            <% if (task.status === 'completed') { %>
                              <form action="/tasks/<%= task._id %>/reset" method="POST" class="inline">
                                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                                <button type="submit" class="w-6 h-6 bg-[#00CED1] rounded-full flex items-center justify-center hover:bg-[#00B8BA] transition-colors duration-200">
                                  <i class="fas fa-check text-white text-sm"></i>
                                </button>
                              </form>
                            <% } else { %>
                              <form action="/tasks/<%= task._id %>/complete" method="POST" class="inline">
                                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                                <button type="submit" class="w-6 h-6 border-2 border-gray-300 rounded-full hover:border-[#00CED1] hover:bg-[#00CED1]/10 transition-all duration-200"></button>
                              </form>
                            <% } %>
                          </div>

                          <!-- Task Content -->
                          <div class="flex-1 min-w-0">
                            <div class="flex items-start justify-between mb-2">
                              <h4 class="text-lg font-semibold text-gray-900 <%= task.status === 'completed' ? 'line-through text-gray-500' : '' %>">
                                <%= task.title %>
                              </h4>
                              <div class="flex items-center space-x-2">
                                <!-- Priority Badge -->
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium <%= task.priority === 'high' ? 'bg-red-100 text-red-800' : task.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800' %>">
                                  <i class="fas <%= task.priority === 'high' ? 'fa-fire' : task.priority === 'medium' ? 'fa-clock' : 'fa-leaf' %> mr-1"></i>
                                  <%= task.priority.charAt(0).toUpperCase() + task.priority.slice(1) %>
                                </span>

                                <!-- Category Badge -->
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-[#00CED1]/10 text-[#00CED1] border border-[#00CED1]/20">
                                  <i class="fas fa-tag mr-1"></i>
                                  <%= task.category.charAt(0).toUpperCase() + task.category.slice(1) %>
                                </span>

                                <!-- Overdue Badge -->
                                <% if (task.isOverdue) { %>
                                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                                    <i class="fas fa-exclamation-triangle mr-1"></i>Overdue
                                  </span>
                                <% } %>
                              </div>
                            </div>

                            <% if (task.description) { %>
                              <p class="text-gray-600 mb-3 <%= task.status === 'completed' ? 'line-through text-gray-400' : '' %>">
                                <%= task.description %>
                              </p>
                            <% } %>

                            <!-- Task Meta -->
                            <div class="flex items-center space-x-6 text-sm text-gray-500">
                              <% if (task.dueTime) { %>
                                <span class="flex items-center">
                                  <i class="fas fa-clock mr-2 text-[#00CED1]"></i>
                                  <%= task.dueTime %>
                                </span>
                              <% } %>

                              <% if (task.estimatedMinutes) { %>
                                <span class="flex items-center">
                                  <i class="fas fa-hourglass-half mr-2 text-purple-500"></i>
                                  <%= Math.floor(task.estimatedMinutes / 60) %>h <%= task.estimatedMinutes % 60 %>m
                                </span>
                              <% } %>

                              <% if (task.tags && task.tags.length > 0) { %>
                                <div class="flex items-center space-x-1">
                                  <i class="fas fa-tags mr-2 text-green-500"></i>
                                  <% task.tags.forEach(function(tag) { %>
                                    <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-md text-xs"><%= tag %></span>
                                  <% }); %>
                                </div>
                              <% } %>
                            </div>
                          </div>
                        </div>

                        <!-- Actions -->
                        <div class="flex items-center space-x-2 ml-4">
                          <a href="/tasks/<%= task._id %>/edit" class="text-gray-400 hover:text-[#00CED1] p-2 rounded-lg hover:bg-[#00CED1]/10 transition-all duration-200" title="Edit Task">
                            <i class="fas fa-edit"></i>
                          </a>

                          <form action="/tasks/<%= task._id %>" method="POST" class="inline" onsubmit="return confirmDelete(event)">
                            <input type="hidden" name="_method" value="DELETE">
                            <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                            <button type="submit" class="text-gray-400 hover:text-red-600 p-2 rounded-lg hover:bg-red-50 transition-all duration-200" title="Delete Task">
                              <i class="fas fa-trash"></i>
                            </button>
                          </form>
                        </div>
                      </div>
                    </div>
                  </div>
                <% }); %>
              </div>
            <% } %>
          </div>
        </div>

        <!-- Overdue Tasks Tab -->
        <div id="tab-content-overdue" class="tab-content hidden">
          <div class="mb-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-2">Overdue Tasks</h3>
            <p class="text-gray-600">Tasks that need immediate attention</p>
          </div>
          <div class="task-list" id="task-list-overdue">
            <% const overdueTasks = tasks.filter(t => t.isOverdue); %>
            <% if (overdueTasks.length === 0) { %>
              <div class="text-center py-12">
                <div class="w-24 h-24 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
                  <i class="fas fa-exclamation-triangle text-red-400 text-3xl"></i>
                </div>
                <h3 class="text-lg font-medium text-gray-900 mb-2">No overdue tasks</h3>
                <p class="text-gray-600">Excellent! You're staying on top of your tasks</p>
              </div>
            <% } else { %>
              <div class="space-y-4">
                <% overdueTasks.forEach(function(task) { %>
                  <div class="task-card <%= task.status === 'completed' ? 'completed' : '' %> <%= task.isOverdue ? 'overdue' : '' %>"
                       data-task-id="<%= task._id %>" data-status="<%= task.status %>" data-overdue="<%= task.isOverdue %>">
                    <div class="bg-white border border-gray-200 rounded-xl p-6 hover:shadow-md transition-all duration-200">
                      <div class="flex items-start justify-between">
                        <div class="flex items-start space-x-4 flex-1">
                          <!-- Status Checkbox -->
                          <div class="flex-shrink-0">
                            <% if (task.status === 'completed') { %>
                              <form action="/tasks/<%= task._id %>/reset" method="POST" class="inline">
                                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                                <button type="submit" class="w-6 h-6 bg-[#00CED1] rounded-full flex items-center justify-center hover:bg-[#00B8BA] transition-colors duration-200">
                                  <i class="fas fa-check text-white text-sm"></i>
                                </button>
                              </form>
                            <% } else { %>
                              <form action="/tasks/<%= task._id %>/complete" method="POST" class="inline">
                                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                                <button type="submit" class="w-6 h-6 border-2 border-gray-300 rounded-full hover:border-[#00CED1] hover:bg-[#00CED1]/10 transition-all duration-200"></button>
                              </form>
                            <% } %>
                          </div>

                          <!-- Task Content -->
                          <div class="flex-1 min-w-0">
                            <div class="flex items-start justify-between mb-2">
                              <h4 class="text-lg font-semibold text-gray-900 <%= task.status === 'completed' ? 'line-through text-gray-500' : '' %>">
                                <%= task.title %>
                              </h4>
                              <div class="flex items-center space-x-2">
                                <!-- Priority Badge -->
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium <%= task.priority === 'high' ? 'bg-red-100 text-red-800' : task.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800' %>">
                                  <i class="fas <%= task.priority === 'high' ? 'fa-fire' : task.priority === 'medium' ? 'fa-clock' : 'fa-leaf' %> mr-1"></i>
                                  <%= task.priority.charAt(0).toUpperCase() + task.priority.slice(1) %>
                                </span>

                                <!-- Category Badge -->
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-[#00CED1]/10 text-[#00CED1] border border-[#00CED1]/20">
                                  <i class="fas fa-tag mr-1"></i>
                                  <%= task.category.charAt(0).toUpperCase() + task.category.slice(1) %>
                                </span>

                                <!-- Overdue Badge -->
                                <% if (task.isOverdue) { %>
                                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                                    <i class="fas fa-exclamation-triangle mr-1"></i>Overdue
                                  </span>
                                <% } %>
                              </div>
                            </div>

                            <% if (task.description) { %>
                              <p class="text-gray-600 mb-3 <%= task.status === 'completed' ? 'line-through text-gray-400' : '' %>">
                                <%= task.description %>
                              </p>
                            <% } %>

                            <!-- Task Meta -->
                            <div class="flex items-center space-x-6 text-sm text-gray-500">
                              <% if (task.dueTime) { %>
                                <span class="flex items-center">
                                  <i class="fas fa-clock mr-2 text-[#00CED1]"></i>
                                  <%= task.dueTime %>
                                </span>
                              <% } %>

                              <% if (task.estimatedMinutes) { %>
                                <span class="flex items-center">
                                  <i class="fas fa-hourglass-half mr-2 text-purple-500"></i>
                                  <%= Math.floor(task.estimatedMinutes / 60) %>h <%= task.estimatedMinutes % 60 %>m
                                </span>
                              <% } %>

                              <% if (task.tags && task.tags.length > 0) { %>
                                <div class="flex items-center space-x-1">
                                  <i class="fas fa-tags mr-2 text-green-500"></i>
                                  <% task.tags.forEach(function(tag) { %>
                                    <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-md text-xs"><%= tag %></span>
                                  <% }); %>
                                </div>
                              <% } %>
                            </div>
                          </div>
                        </div>

                        <!-- Actions -->
                        <div class="flex items-center space-x-2 ml-4">
                          <a href="/tasks/<%= task._id %>/edit" class="text-gray-400 hover:text-[#00CED1] p-2 rounded-lg hover:bg-[#00CED1]/10 transition-all duration-200" title="Edit Task">
                            <i class="fas fa-edit"></i>
                          </a>

                          <form action="/tasks/<%= task._id %>" method="POST" class="inline" onsubmit="return confirmDelete(event)">
                            <input type="hidden" name="_method" value="DELETE">
                            <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                            <button type="submit" class="text-gray-400 hover:text-red-600 p-2 rounded-lg hover:bg-red-50 transition-all duration-200" title="Delete Task">
                              <i class="fas fa-trash"></i>
                            </button>
                          </form>
                        </div>
                      </div>
                    </div>
                  </div>
                <% }); %>
              </div>
            <% } %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Quick Add Modal -->
<div id="quickAddModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
  <div class="bg-white rounded-2xl shadow-2xl p-8 max-w-md w-full mx-4 transform transition-all duration-300 scale-95 opacity-0">
    <div class="flex items-center justify-between mb-6">
      <h3 class="text-xl font-semibold text-gray-900">Quick Add Task</h3>
      <button type="button" onclick="hideQuickAddModal()" class="text-gray-400 hover:text-gray-600">
        <i class="fas fa-times text-xl"></i>
      </button>
    </div>

    <form action="/tasks" method="POST" class="space-y-4">
      <input type="hidden" name="_csrf" value="<%= csrfToken %>">
      <input type="hidden" name="date" value="<%= selectedDate %>">

      <div>
        <label for="modal-title" class="block text-sm font-medium text-gray-700 mb-2">Task Title</label>
        <input type="text" id="modal-title" name="title" required
               class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#00CED1] focus:border-[#00CED1] transition-all duration-200"
               placeholder="Enter task title">
      </div>

      <div class="grid grid-cols-2 gap-4">
        <div>
          <label for="modal-priority" class="block text-sm font-medium text-gray-700 mb-2">Priority</label>
          <select id="modal-priority" name="priority"
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#00CED1] focus:border-[#00CED1] transition-all duration-200">
            <% priorities.forEach(function(priority) { %>
              <option value="<%= priority %>" <%= priority === 'medium' ? 'selected' : '' %>>
                <%= priority.charAt(0).toUpperCase() + priority.slice(1) %>
              </option>
            <% }); %>
          </select>
        </div>

        <div>
          <label for="modal-category" class="block text-sm font-medium text-gray-700 mb-2">Category</label>
          <select id="modal-category" name="category" required
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#00CED1] focus:border-[#00CED1] transition-all duration-200">
            <option value="">Select category</option>
            <% categories.forEach(function(category) { %>
              <option value="<%= category %>"><%= category.charAt(0).toUpperCase() + category.slice(1) %></option>
            <% }); %>
          </select>
        </div>
      </div>

      <div>
        <label for="modal-dueTime" class="block text-sm font-medium text-gray-700 mb-2">Due Time (Optional)</label>
        <input type="time" id="modal-dueTime" name="dueTime"
               class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#00CED1] focus:border-[#00CED1] transition-all duration-200">
      </div>

      <div class="flex space-x-3 pt-4">
        <button type="button" onclick="hideQuickAddModal()" class="flex-1 px-4 py-3 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-all duration-200">
          Cancel
        </button>
        <button type="submit" class="flex-1 px-4 py-3 bg-gradient-to-r from-[#00CED1] to-[#20B2AA] text-white rounded-lg hover:from-[#00B8BA] hover:to-[#1CA0A0] transition-all duration-200 shadow-md hover:shadow-lg">
          <i class="fas fa-plus mr-2"></i>Add Task
        </button>
      </div>
    </form>
  </div>
</div>

<style>
.task-card.completed { opacity: 0.7; }
.task-card.overdue { border-color: #ef4444; background-color: #fef2f2; }
.tab-button { transition: all 0.3s ease; }
.tab-button.active { border-color: #00CED1; color: #00CED1; }
.tab-content { transition: all 0.3s ease; }
.tab-content.hidden { display: none !important; }
.tab-content.active { display: block !important; }
.task-list { min-height: 200px; }
/* Ensure delete buttons are always visible */
.task-card .actions { opacity: 1 !important; visibility: visible !important; }
/* Add subtle animation to delete buttons */
.task-card:hover .actions button[type="submit"] { transform: scale(1.05); }
/* Make delete buttons more prominent */
.bg-red-500 { box-shadow: 0 2px 4px rgba(239, 68, 68, 0.2); }
.bg-red-500:hover { box-shadow: 0 4px 8px rgba(239, 68, 68, 0.3); }

/* Ensure tab buttons are clickable */
.tab-button {
  cursor: pointer !important;
  pointer-events: auto !important;
  user-select: none;
  transition: all 0.3s ease;
}

.tab-button:hover {
  background-color: rgba(0, 206, 209, 0.1);
}

.tab-button.active {
  border-color: #00CED1 !important;
  color: #00CED1 !important;
}

/* Debug styles */
.tab-button:active {
  transform: scale(0.98);
}
</style>

<script>
let currentTab = 'all';

function switchTab(tabName) {
  console.log('switchTab called with:', tabName);
  
  // Hide all tab contents
  document.querySelectorAll('.tab-content').forEach(content => {
    content.classList.add('hidden');
    content.classList.remove('active');
    console.log('Hiding content:', content.id);
  });

  // Deactivate all tab buttons
  document.querySelectorAll('.tab-button').forEach(button => {
    button.classList.remove('active');
    button.classList.add('border-transparent', 'text-gray-500');
    button.classList.remove('text-[#00CED1]');
    console.log('Deactivating button:', button.id);
  });

  // Show selected tab content
  const selectedContent = document.getElementById(`tab-content-${tabName}`);
  if (selectedContent) {
    selectedContent.classList.remove('hidden');
    selectedContent.classList.add('active');
    console.log('Showing content:', selectedContent.id);
    
    // Load filtered tasks via API
    loadTasksForTab(tabName);
  } else {
    console.error('Tab content not found:', `tab-content-${tabName}`);
  }

  // Activate selected tab button
  const selectedButton = document.getElementById(`tab-${tabName}`);
  if (selectedButton) {
    selectedButton.classList.add('active');
    selectedButton.classList.remove('border-transparent', 'text-gray-500');
    selectedButton.classList.add('border-[#00CED1]', 'text-[#00CED1]');
    console.log('Activating button:', selectedButton.id);
  } else {
    console.error('Tab button not found:', `tab-${tabName}`);
  }

  currentTab = tabName;
}

function loadTasksForTab(tabName) {
  const taskListContainer = document.getElementById(`task-list-${tabName}`);
  if (!taskListContainer) return;

  // Show loading state
  taskListContainer.innerHTML = `
    <div class="text-center py-12">
      <div class="w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
        <i class="fas fa-spinner fa-spin text-gray-400 text-3xl"></i>
      </div>
      <h3 class="text-lg font-medium text-gray-900 mb-2">Loading tasks...</h3>
      <p class="text-gray-600">Please wait while we fetch your tasks</p>
    </div>
  `;

  // Get current date from the date picker
  const dateInput = document.querySelector('input[name="date"]');
  const selectedDate = dateInput ? dateInput.value : new Date().toISOString().split('T')[0];

  // Make API call to get filtered tasks
  fetch(`/tasks/api/by-status?status=${tabName}&date=${selectedDate}`)
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        renderTasksInTab(tabName, data.tasks);
        updateTabCount(tabName, data.count);
      } else {
        showErrorInTab(tabName, data.message || 'Failed to load tasks');
      }
    })
    .catch(error => {
      console.error('Error loading tasks:', error);
      showErrorInTab(tabName, 'Failed to load tasks. Please try again.');
    });
}

function renderTasksInTab(tabName, tasks) {
  const taskListContainer = document.getElementById(`task-list-${tabName}`);
  if (!taskListContainer) return;

  if (tasks.length === 0) {
    // Show empty state
    const emptyState = getEmptyStateForTab(tabName);
    taskListContainer.innerHTML = emptyState;
  } else {
    // Render tasks
    const tasksHTML = tasks.map(task => createTaskCardHTML(task)).join('');
    taskListContainer.innerHTML = `<div class="space-y-4">${tasksHTML}</div>`;
  }
}

function createTaskCardHTML(task) {
  const statusClass = task.status === 'completed' ? 'completed' : '';
  const overdueClass = task.isOverdue ? 'overdue' : '';
  const titleClass = task.status === 'completed' ? 'line-through text-gray-500' : '';
  const descriptionClass = task.status === 'completed' ? 'line-through text-gray-400' : '';
  
  const priorityBadgeClass = task.priority === 'high' ? 'bg-red-100 text-red-800' : 
                           task.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' : 
                           'bg-green-100 text-green-800';
  
  const priorityIcon = task.priority === 'high' ? 'fa-fire' : 
                      task.priority === 'medium' ? 'fa-clock' : 'fa-leaf';

  return `
    <div class="task-card ${statusClass} ${overdueClass}" data-task-id="${task._id}" data-status="${task.status}" data-overdue="${task.isOverdue}">
      <div class="bg-white border border-gray-200 rounded-xl p-6 hover:shadow-md transition-all duration-200">
        <div class="flex items-start justify-between">
          <div class="flex items-start space-x-4 flex-1">
            <!-- Status Checkbox -->
            <div class="flex-shrink-0">
              ${task.status === 'completed' ? `
                <form action="/tasks/${task._id}/reset" method="POST" class="inline">
                  <input type="hidden" name="_csrf" value="${document.querySelector('meta[name="csrf-token"]').getAttribute('content')}">
                  <button type="submit" class="w-6 h-6 bg-[#00CED1] rounded-full flex items-center justify-center hover:bg-[#00B8BA] transition-colors duration-200">
                    <i class="fas fa-check text-white text-sm"></i>
                  </button>
                </form>
              ` : `
                <form action="/tasks/${task._id}/complete" method="POST" class="inline">
                  <input type="hidden" name="_csrf" value="${document.querySelector('meta[name="csrf-token"]').getAttribute('content')}">
                  <button type="submit" class="w-6 h-6 border-2 border-gray-300 rounded-full hover:border-[#00CED1] hover:bg-[#00CED1]/10 transition-all duration-200"></button>
                </form>
              `}
            </div>

            <!-- Task Content -->
            <div class="flex-1 min-w-0">
              <div class="flex items-start justify-between mb-2">
                <h4 class="text-lg font-semibold text-gray-900 ${titleClass}">${task.title}</h4>
                <div class="flex items-center space-x-2">
                  <!-- Priority Badge -->
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${priorityBadgeClass}">
                    <i class="fas ${priorityIcon} mr-1"></i>
                    ${task.priority.charAt(0).toUpperCase() + task.priority.slice(1)}
                  </span>
                  
                  <!-- Category Badge -->
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-[#00CED1]/10 text-[#00CED1] border border-[#00CED1]/20">
                    <i class="fas fa-tag mr-1"></i>
                    ${task.category.charAt(0).toUpperCase() + task.category.slice(1)}
                  </span>
                  
                  <!-- Overdue Badge -->
                  ${task.isOverdue ? `
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                      <i class="fas fa-exclamation-triangle mr-1"></i>Overdue
                    </span>
                  ` : ''}
                </div>
              </div>
              
              ${task.description ? `
                <p class="text-gray-600 mb-3 ${descriptionClass}">${task.description}</p>
              ` : ''}
              
              <!-- Task Meta -->
              <div class="flex items-center space-x-6 text-sm text-gray-500">
                ${task.dueTime ? `
                  <span class="flex items-center">
                    <i class="fas fa-clock mr-2 text-[#00CED1]"></i>
                    ${task.dueTime}
                  </span>
                ` : ''}
                
                ${task.estimatedMinutes ? `
                  <span class="flex items-center">
                    <i class="fas fa-hourglass-half mr-2 text-purple-500"></i>
                    ${Math.floor(task.estimatedMinutes / 60)}h ${task.estimatedMinutes % 60}m
                  </span>
                ` : ''}
                
                ${task.tags && task.tags.length > 0 ? `
                  <div class="flex items-center space-x-1">
                    <i class="fas fa-tags mr-2 text-green-500"></i>
                    ${task.tags.map(tag => `<span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-md text-xs">${tag}</span>`).join('')}
                  </div>
                ` : ''}
              </div>
            </div>
          </div>

          <!-- Actions -->
          <div class="flex items-center space-x-2 ml-4 actions">
            <a href="/tasks/${task._id}/edit" class="text-gray-400 hover:text-[#00CED1] p-2 rounded-lg hover:bg-[#00CED1]/10 transition-all duration-200" title="Edit Task">
              <i class="fas fa-edit"></i>
            </a>
            
            <form action="/tasks/${task._id}" method="POST" class="inline" onsubmit="return confirmDelete(event)">
              <input type="hidden" name="_method" value="DELETE">
              <input type="hidden" name="_csrf" value="${document.querySelector('meta[name="csrf-token"]').getAttribute('content')}">
              <button type="submit" class="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded-lg transition-all duration-200 text-sm font-medium flex items-center space-x-1 relative" title="Delete Task">
                <i class="fas fa-trash text-xs"></i>
                <span>Delete</span>
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>
  `;
}

function getEmptyStateForTab(tabName) {
  const emptyStates = {
    pending: `
      <div class="text-center py-12">
        <div class="w-24 h-24 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <i class="fas fa-clock text-yellow-400 text-3xl"></i>
        </div>
        <h3 class="text-lg font-medium text-gray-900 mb-2">No pending tasks</h3>
        <p class="text-gray-600">Great job! All tasks are completed</p>
      </div>
    `,
    completed: `
      <div class="text-center py-12">
        <div class="w-24 h-24 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <i class="fas fa-check-circle text-green-400 text-3xl"></i>
        </div>
        <h3 class="text-lg font-medium text-gray-900 mb-2">No completed tasks</h3>
        <p class="text-gray-600">Start completing your tasks to see them here</p>
      </div>
    `,
    overdue: `
      <div class="text-center py-12">
        <div class="w-24 h-24 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <i class="fas fa-exclamation-triangle text-red-400 text-3xl"></i>
        </div>
        <h3 class="text-lg font-medium text-gray-900 mb-2">No overdue tasks</h3>
        <p class="text-gray-600">Excellent! You're staying on top of your tasks</p>
      </div>
    `
  };
  
  return emptyStates[tabName] || '';
}

function showErrorInTab(tabName, message) {
  const taskListContainer = document.getElementById(`task-list-${tabName}`);
  if (taskListContainer) {
    taskListContainer.innerHTML = `
      <div class="text-center py-12">
        <div class="w-24 h-24 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <i class="fas fa-exclamation-triangle text-red-400 text-3xl"></i>
        </div>
        <h3 class="text-lg font-medium text-gray-900 mb-2">Error loading tasks</h3>
        <p class="text-gray-600">${message}</p>
        <button onclick="loadTasksForTab('${tabName}')" class="mt-4 bg-[#00CED1] text-white px-4 py-2 rounded-lg hover:bg-[#00B8BA] transition-all duration-200">
          <i class="fas fa-refresh mr-2"></i>Try Again
        </button>
      </div>
    `;
  }
}

function updateTabCount(tabName, count) {
  const tabButton = document.getElementById(`tab-${tabName}`);
  if (tabButton) {
    const icon = tabButton.querySelector('i');
    const text = tabButton.textContent.split('(')[0].trim();
    tabButton.innerHTML = `${icon.outerHTML} ${text} (${count})`;
  }
}

function showQuickAddModal() {
  const modal = document.getElementById('quickAddModal');
  modal.classList.remove('hidden');

  setTimeout(() => {
    const panel = modal.querySelector('.bg-white');
    panel.classList.remove('scale-95', 'opacity-0');
    panel.classList.add('scale-100', 'opacity-100');
  }, 10);

  const titleInput = document.getElementById('modal-title');
  if (titleInput) titleInput.focus();
}

function hideQuickAddModal() {
  const modal = document.getElementById('quickAddModal');
  const panel = modal.querySelector('.bg-white');
  panel.classList.add('scale-95', 'opacity-0');
  setTimeout(() => { modal.classList.add('hidden'); }, 300);
}

function confirmDelete(event) {
  if (!confirm('Are you sure you want to delete this task? This action cannot be undone.')) {
    event.preventDefault();
    return false;
  }
  return true;
}

function confirmLogout(event) {
  if (!confirm('Are you sure you want to logout?')) {
    event.preventDefault();
    return false;
  }
  return true;
}

// Close modal on backdrop click
document.getElementById('quickAddModal').addEventListener('click', (e) => {
  if (e.target === document.getElementById('quickAddModal')) {
    hideQuickAddModal();
  }
});

// Close modal on escape key
document.addEventListener('keydown', (e) => {
  if (e.key === 'Escape') hideQuickAddModal();
});

function testTabClick(tabName) {
  alert('Tab clicked: ' + tabName);
  switchTab(tabName);
}

// Initialize the page
document.addEventListener('DOMContentLoaded', function () {
  console.log('DOM loaded, initializing tabs...');
  
  // Add event listeners to tab buttons as backup
  document.querySelectorAll('.tab-button').forEach(button => {
    button.addEventListener('click', function() {
      const tabName = this.id.replace('tab-', '');
      console.log('Tab clicked:', tabName);
      switchTab(tabName);
    });
  });
  
  // Auto-refresh task counts (placeholder)
  setInterval(() => {
    // Optionally, fetch and update stats/tasks here.
  }, 30000);
});
</script>

<%- include('../partials/footer') %>
