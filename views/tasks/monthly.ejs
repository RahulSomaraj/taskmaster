<%- include('../partials/header', { title: 'Monthly View' }) %>

<div class="container mx-auto px-4 py-8">
  <!-- Header -->
  <div class="flex justify-between items-center mb-8">
    <div>
      <h1 class="text-3xl font-bold text-gray-900">Monthly Summary</h1>
      <p class="text-gray-600 mt-2">View your tasks across the month</p>
    </div>
    <div class="flex space-x-4">
      <button onclick="previousMonth()" class="btn btn-secondary">
        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
        Previous
      </button>
      <button onclick="nextMonth()" class="btn btn-secondary">
        Next
        <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </button>
    </div>
  </div>

  <!-- Month Navigation -->
  <div class="bg-white rounded-lg shadow-sm border p-6 mb-8">
    <div class="flex justify-between items-center">
      <div class="flex items-center space-x-4">
        <label for="monthPicker" class="text-sm font-medium text-gray-700">Select Month:</label>
        <input 
          type="month" 
          id="monthPicker" 
          class="form-input"
          value="<%= currentMonth %>"
          onchange="changeMonth(this.value)"
        >
      </div>
      <div class="text-right">
        <h2 class="text-2xl font-semibold text-gray-900" id="monthDisplay">
          <%= dayjs(currentMonth + '-01').format('MMMM YYYY') %>
        </h2>
        <p class="text-sm text-gray-500">Click on any day to view details</p>
      </div>
    </div>
  </div>

  <!-- Calendar Grid -->
  <div class="bg-white rounded-lg shadow-sm border overflow-hidden">
    <!-- Calendar Header -->
    <div class="grid grid-cols-7 bg-gray-50 border-b">
      <% ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].forEach(day => { %>
        <div class="px-4 py-3 text-center text-sm font-medium text-gray-700">
          <%= day %>
        </div>
      <% }) %>
    </div>

    <!-- Calendar Days -->
    <div class="grid grid-cols-7">
      <% calendarDays.forEach(day => { %>
        <div class="min-h-[120px] border-r border-b border-gray-200 p-2 relative <%= day.isCurrentMonth ? 'bg-white' : 'bg-gray-50' %>">
          <% if (day.date) { %>
            <!-- Date Number -->
            <div class="flex justify-between items-start mb-2">
              <span class="text-sm font-medium <%= day.isToday ? 'bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center' : 'text-gray-900' %>">
                <%= day.date.getDate() %>
              </span>
              <% if (day.isCurrentMonth) { %>
                <button 
                  onclick="quickAdd('<%= dayjs(day.date).format('YYYY-MM-DD') %>')"
                  class="text-gray-400 hover:text-blue-500 text-xs"
                  title="Quick Add Task"
                >
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                  </svg>
                </button>
              <% } %>
            </div>

            <!-- Task Summary -->
            <% if (day.isCurrentMonth && day.tasks && day.tasks.length > 0) { %>
              <div class="space-y-1">
                <% const completedCount = day.tasks.filter(t => t.status === 'completed').length %>
                <% const totalCount = day.tasks.length %>
                <% const overdueCount = day.tasks.filter(t => t.isOverdue).length %>
                
                <!-- Task Count -->
                <div class="text-xs text-gray-600">
                  <%= totalCount %> task<%= totalCount !== 1 ? 's' : '' %>
                </div>

                <!-- Progress Bar -->
                <% if (totalCount > 0) { %>
                  <div class="w-full bg-gray-200 rounded-full h-1.5">
                    <div 
                      class="bg-green-500 h-1.5 rounded-full" 
                      style="width: <%= (completedCount / totalCount) * 100 %>%"
                    ></div>
                  </div>
                <% } %>

                <!-- Status Indicators -->
                <div class="flex flex-wrap gap-1">
                  <% if (completedCount > 0) { %>
                    <span class="inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                      <%= completedCount %> done
                    </span>
                  <% } %>
                  <% if (overdueCount > 0) { %>
                    <span class="inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                      <%= overdueCount %> overdue
                    </span>
                  <% } %>
                </div>

                <!-- Priority Indicators -->
                <% const urgentTasks = day.tasks.filter(t => t.priority === 'urgent' && t.status !== 'completed').length %>
                <% if (urgentTasks > 0) { %>
                  <div class="flex items-center text-xs text-red-600">
                    <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                    </svg>
                    <%= urgentTasks %> urgent
                  </div>
                <% } %>
              </div>
            <% } else if (day.isCurrentMonth) { %>
              <div class="text-xs text-gray-400 mt-2">No tasks</div>
            <% } %>
          <% } %>
        </div>
      <% }) %>
    </div>
  </div>

  <!-- Monthly Statistics -->
  <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mt-8">
    <div class="bg-white rounded-lg shadow-sm border p-6">
      <div class="flex items-center">
        <div class="p-2 bg-blue-100 rounded-lg">
          <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
          </svg>
        </div>
        <div class="ml-4">
          <p class="text-sm font-medium text-gray-600">Total Tasks</p>
          <p class="text-2xl font-semibold text-gray-900"><%= monthlyStats.totalTasks %></p>
        </div>
      </div>
    </div>

    <div class="bg-white rounded-lg shadow-sm border p-6">
      <div class="flex items-center">
        <div class="p-2 bg-green-100 rounded-lg">
          <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
        </div>
        <div class="ml-4">
          <p class="text-sm font-medium text-gray-600">Completed</p>
          <p class="text-2xl font-semibold text-gray-900"><%= monthlyStats.completedTasks %></p>
        </div>
      </div>
    </div>

    <div class="bg-white rounded-lg shadow-sm border p-6">
      <div class="flex items-center">
        <div class="p-2 bg-yellow-100 rounded-lg">
          <svg class="w-6 h-6 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
        </div>
        <div class="ml-4">
          <p class="text-sm font-medium text-gray-600">Pending</p>
          <p class="text-2xl font-semibold text-gray-900"><%= monthlyStats.pendingTasks %></p>
        </div>
      </div>
    </div>

    <div class="bg-white rounded-lg shadow-sm border p-6">
      <div class="flex items-center">
        <div class="p-2 bg-red-100 rounded-lg">
          <svg class="w-6 h-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
        </div>
        <div class="ml-4">
          <p class="text-sm font-medium text-gray-600">Overdue</p>
          <p class="text-2xl font-semibold text-gray-900"><%= monthlyStats.overdueTasks %></p>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Quick Add Modal -->
<div id="quickAddModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden z-50">
  <div class="flex items-center justify-center min-h-screen p-4">
    <div class="bg-white rounded-lg shadow-xl max-w-md w-full">
      <div class="flex justify-between items-center p-6 border-b">
        <h3 class="text-lg font-semibold text-gray-900">Quick Add Task</h3>
        <button onclick="closeQuickAddModal()" class="text-gray-400 hover:text-gray-600">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      
      <form id="quickAddForm" class="p-6">
        <input type="hidden" id="quickAddDate" name="date">
        
        <div class="mb-4">
          <label for="quickAddTitle" class="block text-sm font-medium text-gray-700 mb-2">Task Title</label>
          <input 
            type="text" 
            id="quickAddTitle" 
            name="title" 
            class="form-input w-full" 
            placeholder="Enter task title"
            required
          >
        </div>

        <div class="mb-4">
          <label for="quickAddPriority" class="block text-sm font-medium text-gray-700 mb-2">Priority</label>
          <select id="quickAddPriority" name="priority" class="form-select w-full">
            <option value="low">Low</option>
            <option value="medium" selected>Medium</option>
            <option value="high">High</option>
            <option value="urgent">Urgent</option>
          </select>
        </div>

        <div class="mb-6">
          <label for="quickAddCategory" class="block text-sm font-medium text-gray-700 mb-2">Category</label>
          <select id="quickAddCategory" name="category" class="form-select w-full">
            <option value="work">Work</option>
            <option value="personal">Personal</option>
            <option value="health">Health</option>
            <option value="learning">Learning</option>
            <option value="finance">Finance</option>
            <option value="other">Other</option>
          </select>
        </div>

        <div class="flex justify-end space-x-3">
          <button 
            type="button" 
            onclick="closeQuickAddModal()" 
            class="btn btn-secondary"
          >
            Cancel
          </button>
          <button type="submit" class="btn btn-primary">
            Add Task
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
let currentMonth = '<%= currentMonth %>';

function previousMonth() {
  const date = new Date(currentMonth + '-01');
  date.setMonth(date.getMonth() - 1);
  currentMonth = date.getFullYear() + '-' + String(date.getMonth() + 1).padStart(2, '0');
  window.location.href = `/tasks/monthly?month=${currentMonth}`;
}

function nextMonth() {
  const date = new Date(currentMonth + '-01');
  date.setMonth(date.getMonth() + 1);
  currentMonth = date.getFullYear() + '-' + String(date.getMonth() + 1).padStart(2, '0');
  window.location.href = `/tasks/monthly?month=${currentMonth}`;
}

function changeMonth(value) {
  window.location.href = `/tasks/monthly?month=${value}`;
}

function quickAdd(date) {
  document.getElementById('quickAddDate').value = date;
  document.getElementById('quickAddModal').classList.remove('hidden');
  document.getElementById('quickAddTitle').focus();
}

function closeQuickAddModal() {
  document.getElementById('quickAddModal').classList.add('hidden');
  document.getElementById('quickAddForm').reset();
}

// Handle quick add form submission
document.getElementById('quickAddForm').addEventListener('submit', async function(e) {
  e.preventDefault();
  
  const formData = new FormData(this);
  const data = Object.fromEntries(formData);
  
  try {
    const response = await fetch('/tasks', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
      },
      body: JSON.stringify(data)
    });
    
    if (response.ok) {
      closeQuickAddModal();
      window.location.reload();
    } else {
      const error = await response.json();
      alert('Error: ' + error.message);
    }
  } catch (error) {
    alert('Error creating task');
  }
});

// Update month display when page loads
document.addEventListener('DOMContentLoaded', function() {
  const monthPicker = document.getElementById('monthPicker');
  const monthDisplay = document.getElementById('monthDisplay');
  
  monthPicker.addEventListener('change', function() {
    const date = new Date(this.value + '-01');
    monthDisplay.textContent = date.toLocaleDateString('en-US', { 
      month: 'long', 
      year: 'numeric' 
    });
  });
});
</script>

<%- include('../partials/footer') %>
